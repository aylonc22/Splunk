const express = require('express');
const mysql = require('mysql2');
const app = express();
const port = 3000;
//Interval pointer
let intervalPointer = undefined;
// Parse incoming JSON requests
app.use(express.json());

// MySQL Database connection
const db = mysql.createConnection({
  host: 'localhost',   // Change this to your MySQL host (e.g., 'localhost' or a remote server)
  user: 'root',        // Your MySQL username
  password: '12345678',        // Your MySQL password
  database: 'splunk'   // The name of the database you're using
});

// Connect to the MySQL database
db.connect((err) => {
  if (err) {
    console.error('Database connection failed: ' + err.stack);
    return;
  }
  console.log('Connected to the database.');
});

// Define a route to get all data from the table
app.get('/data', (req, res) => {
  // Query to select all data from your table
  db.query('SELECT * FROM your_table_name', (err, results) => {
    if (err) {
      console.error('Error retrieving data: ', err);
      return res.status(500).json({ message: 'Error retrieving data' });
    }
    res.json(results);  // Return results as JSON
  });
});

// Define a route to send data to the MySQL table (POST request)
app.post('/data', (req, res) => {
  const { number } = req.body;  // Get the 'number' from the request body

  // Insert data into the table (timestamp is auto-generated by MySQL)
  if(intervalPointer === undefined){
    intervalPointer = setInterval(()=>{
        db.query('INSERT INTO your_table_name (number) VALUES (?)', [number], (err, result) => {
            if (err) {
              console.error('Error inserting data: ', err);
              return res.status(500).json({ message: 'Error inserting data' });
            }
            res.status(201).json({ message: 'Data inserted successfully', data: { number } });
          });
    },3000)
  }
});
app.post('/stop',(req,res)=>{
    if(intervalPointer)
       clearInterval(intervalPointer);
})
// Start the server
app.listen(port, () => {
  console.log(`Server is running at http://localhost:${port}`);
});
